{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notebooks","currentBookIndex","notes","currentNote","_this2","axios","get","then","res","setState","data","currentBook","loadNotes","id","_this3","react_default","a","createElement","className","onClick","handleAddNote","map","notebook","index","key","handleActiveClassName","handleSelectBook","name","note","cx","active","handleEditNote","title","body","handleDateTime","datetime","handleDeleteNote","type","value","onChange","e","handleFieldChange","onKeyDown","handlePressTab","dangerouslySetInnerHTML","__html","marked","fieldName","defaultClasses","apply","toConsumableArray","concat","book","bookId","_this4","console","log","dateObj","Date","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","times","getTime","difference","_this5","toISOString","post","reloadNotes","noteId","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","delete","_this6","_this7","objectSpread","defineProperty","target","put","findIndex","o","keyCode","selectionStartPos","selectionStart","selectionEndPos","selectionEnd","oldContent","substring","preventDefault","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ff83f7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'normalize.css';\nimport 'github-markdown-css';\nimport axios from 'axios';\nimport cx from 'classnames';\nimport Swal from 'sweetalert2'\nimport marked from 'marked';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notebooks: [],\n      currentBookIndex: 0,\n      notes: [],\n      currentNote: null\n    };\n  }\n\n  // 使用classnames 优化className\n  // 格式化note.body(省略号),datetime(通过new Date('')、刚刚、前天、昨天、2月13日 23:23).\n\n  componentDidMount() {\n    axios.get('http://localhost:3100/notebooks').then(res => {\n      this.setState({ notebooks: res.data });\n      const currentBook = res.data[this.state.currentBookIndex];\n      this.loadNotes(currentBook.id);\n    });\n  }\n\n  render() {\n    const notebooks = this.state.notebooks;\n    const currentNote = this.state.currentNote;\n    return (\n      <div className=\"app\">\n        <div className=\"sidebar\">\n          <div className=\"header\">\n            <button className=\"button adder\" onClick={() => this.handleAddNote()}>\n              <i className=\"iconfont icon-add\"></i>\n              新建笔记\n            </button>\n          </div>\n          <div className=\"body\">\n            <div className=\"notebooks\">\n              <div className=\"header has-icon\">\n                <i className=\"iconfont icon-books\"></i>\n                笔记本\n              </div>\n              <div className=\"body\">\n                <ul className=\"notebooks-list\">\n                  {\n                    notebooks.map((notebook, index) => (\n                      <li key={notebook.id}\n                        className={this.handleActiveClassName('currentBookIndex', ['notebook-item'], index)}\n                        onClick={() => this.handleSelectBook(index)}>\n                        <div className=\"title has-icon\">\n                          <i className=\"iconfont icon-book\"></i>\n                          {notebook.name}\n                        </div>\n                        <button className=\"button trash\"><i className=\"iconfont icon-trash\"></i></button>\n                      </li>\n                    ))\n                  }\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"notes-panel\">\n          <div className=\"header\">读书笔记</div>\n          <div className=\"body\">\n            <ul className=\"notes-list\">\n            {\n              this.state.notes.map((note, index) => (\n                <li key={note.id}>\n                  <div className={cx('note-brief', { active: currentNote && currentNote.id === note.id })}>\n                    <div className=\"box\" onClick={() => this.handleEditNote(note.id)}>\n                      <div className=\"header\">{note.title}</div>\n                      <div className=\"body\">\n                        {note.body}\n                      </div>\n                    </div>\n                    <div className=\"footer\">\n                      <div className=\"datetime\">{this.handleDateTime(note.datetime)}</div>\n                      <button className=\"trash button\" onClick={() => this.handleDeleteNote(note.id)}>\n                        <i className=\"iconfont icon-trash\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              ))\n            }\n            </ul>\n          </div>\n        </div>\n        { currentNote ?\n          <div className=\"note-panel\">\n            <div className=\"header\">\n              <div className=\"category has-icon\">\n                <i className=\"iconfont icon-notebook\"></i>\n                读书笔记\n              </div>\n              <div className=\"title\">\n                <input name=\"title\" type=\"text\" value={currentNote.title} onChange={e => this.handleFieldChange(e)}/>\n              </div>\n            </div>\n            <div className=\"body\">\n              <div className=\"editor\">\n                <textarea name=\"body\"\n                  value={currentNote.body}\n                  onChange={e => this.handleFieldChange(e)}\n                  onKeyDown={e => this.handlePressTab(e)}\n                ></textarea>\n              </div>\n              <div className=\"preview markdown-body\">\n                <div dangerouslySetInnerHTML={{ __html: marked(currentNote.body) }}></div>\n              </div>\n            </div>\n          </div> : null\n        }\n      </div>\n    );\n  }\n\n  // 单词拼写错误，叫fieldName\n  handleActiveClassName(fieldName, defaultClasses, index) {\n    return cx(...defaultClasses, { active: this.state[fieldName] === index });\n  }\n\n  handleSelectBook(index) {\n    this.setState({ currentBookIndex: index });\n    const book = this.state.notebooks[index];\n    this.loadNotes(book.id);\n  }\n\n  loadNotes(bookId) {\n    axios.get(`http://localhost:3100/notes?bookId=${bookId}`).then(res => {\n      console.log(res.data);\n      this.setState({ notes: res.data });\n    });\n  }\n\n  handleDateTime(datetime) {\n\n    const dateObj = new Date(datetime);\n    // let formatDateTime = '';\n\n    const month = dateObj.getMonth() + 1;\n    const date = dateObj.getDate();\n    const hours = dateObj.getHours();\n    const minutes = dateObj.getMinutes();\n\n    const times = dateObj.getTime();\n    const nowTimes = new Date().getTime();\n    const difference = nowTimes - times;\n\n    // 下面是否使用if语句更好？比如\n    /*\n     if (difference < 60 * 1000) {\n      return '刚刚';\n     }\n     */\n    // switch (true) {\n    //   case difference < 60 * 1000 :\n    //     formatDateTime = '刚刚';\n    //     break;\n\n    //   case difference >= 60 * 1000 && difference < 2 * 60 * 1000:\n    //     formatDateTime = '1分钟前';\n    //     break;\n\n    //   case difference >= 2 * 60 * 1000 && difference < 3 * 60 * 1000:\n    //     formatDateTime = '2分钟前';\n    //     break;\n\n    //   case difference >= 3 * 60 * 1000 && difference < 24 * 60 * 60 * 1000 :\n    //     // 这里的拼装，可以使用ES6中的模板字符串\n    //     // `今天 ${hours}:${minutes}`;\n    //     formatDateTime = ['今天 ', hours, ':', minutes].join('');\n    //     break;\n\n    //   case difference >= 24 * 60 * 60 * 1000 && difference < 2 * 24 * 60 * 60 * 1000 :\n    //     formatDateTime = ['昨天 ', hours, ':', minutes].join('');\n    //     break;\n\n    //   default:\n    //     formatDateTime = [month, '月', date, '日 ', hours, ':', minutes].join('');\n    //     break;\n    // }\n\n    // return formatDateTime;\n\n    if (difference < 60 * 1000) {\n      return '刚刚';\n    } else if (difference >= 60 * 1000 && difference < 2 * 60 * 1000) {\n      return '1分钟前';\n    } else if (difference >= 2 * 60 * 1000 && difference < 3 * 60 * 1000) {\n      return '2分钟前';\n    } else if (difference >= 3 * 60 * 1000 && difference < 24 * 60 * 60 * 1000) {\n      return `今天 ${hours}:${minutes}`\n    } else if (difference >= 24 * 60 * 60 * 1000 && difference < 2 * 24 * 60 * 60 * 1000) {\n      return `昨天 ${hours}:${minutes}`\n    } else {\n      return `${month}月${date}日 ${hours}:${minutes}`\n    }\n  }\n\n  handleAddNote() {\n    const note = {\n      title: '新建笔记',\n      body: '',\n      datetime: new Date().toISOString(),\n      bookId: this.state.notebooks[this.state.currentBookIndex].id\n    };\n    axios.post('http://localhost:3100/notes/', note).then(res => {\n      this.reloadNotes();\n    });\n  }\n\n  reloadNotes() {\n    const bookId = this.state.notebooks[this.state.currentBookIndex].id;\n    this.loadNotes(bookId);\n  }\n\n  // 你学过ES6，可以尝试使用async/await来实现下面这段代码。\n  /**\n  async handleDeleteNote(noteId) {\n    const result = await Swal.fire({\n      ...\n    });\n\n    if (result.value) {\n      ...\n    }\n  }\n\n  是否避免的层层嵌套的缩进，让这个流程更加清晰\n   */\n  // handleDeleteNote(noteId) {\n\n  //   Swal.fire({\n  //     title: '确定要删除吗?',\n  //     type: 'question',\n  //     showCancelButton: true,\n  //     confirmButtonColor: '#3085d6',\n  //     cancelButtonColor: '#d33',\n  //     confirmButtonText: '确定',\n  //     cancelButtonText: '取消'\n  //   }).then((result) => {\n  //     if (result.value) {\n  //       axios.delete(`http://localhost:3100/notes/${noteId}`).then(res => {\n\n  //         Swal.fire({\n  //           title: '删除成功！',\n  //           type: 'success'\n  //         });\n\n  //         this.reloadNotes();\n  //       });\n  //     }\n  //   })\n\n  // }\n\n  async handleDeleteNote(noteId) {\n    const result = await Swal.fire({\n      title: '确定要删除吗?',\n      type: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: '确定',\n      cancelButtonText: '取消'\n    });\n\n    if (result.value) {\n      await axios.delete(`http://localhost:3100/notes/${noteId}`);\n      Swal.fire({\n        title: '删除成功！',\n        type: 'success'\n      });\n      this.reloadNotes();\n    }\n  }\n\n  handleEditNote(noteId) {\n    axios.get(`http://localhost:3100/notes/${noteId}`).then(res => {\n      this.setState({ currentNote: res.data });\n    });\n  }\n\n  handleFieldChange(e) {\n    const note = {\n      ...this.state.currentNote,\n      [e.target.name]: e.target.value\n    };\n\n    this.setState({\n      currentNote: note\n    });\n\n    axios.put(`http://localhost:3100/notes/${this.state.currentNote.id}`, note);\n\n    const notes = [...this.state.notes];\n    const index = notes.findIndex(o => o.id === this.state.currentNote.id);\n    if (index !== -1) {\n      notes[index] = note;\n      this.setState({ notes: notes });\n    }\n  }\n\n  handlePressTab(e) {\n    if ( e.keyCode === 9 ) {\n\n      // Set up some variables. We need to know the current position of the cursor or selection.\n      // 用了es6 const，复制过来的代码最好也将它改成一致的，把var改成const，顺便阅读一遍。\n      const selectionStartPos = e.target.selectionStart;\n      const selectionEndPos = e.target.selectionEnd;\n      const oldContent = e.target.value;\n\n      // Set the new content.\n      e.target.value = oldContent.substring( 0, selectionStartPos ) + \"\\t\" + oldContent.substring( selectionEndPos );\n\n      // Set the new cursor position (current position + 1 to account for the new tab character).\n      e.target.selectionStart = e.target.selectionEnd = selectionStartPos + 1;\n\n      // Prevent the default action (tabbing to the next field or control).\n      e.preventDefault();\n\n      this.handleFieldChange(e);\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}